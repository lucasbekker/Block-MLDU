function sparse_join_exe()
sparse_join_invs(0, [], [], 0, [], [], 0, [], [], '1');
sparse_join_invs(0, [], [], 1, [], [], 1, [], [], '1B');
sparse_join_invs(10, [], [], 1, [], [], 10, [], [], '1C');
sparse_join_invs(10, [], [], 21, [], [], 21, [], [], '2');
fprintf('sparse empty 10 x 1 and sparse 8 x 1 vector:\n');
sparse_join_invs(10, [], [], 8, [3;7], [4;-8], 10, [3;7], [0, 4;-0, -8], '3');
sparse_join_invs(21, [21], [-7], 20, [20], [8], 21, [20;21], [0, 8;-7, 0], '4');

sparse_join_invs(0, [], [], 2, [1], [1], 2, [1], [0, 1], '5');
sparse_join_invs(0, [], [], 10, [1;4;5;7;8], [-5;2;-2;8;7], 10, [1;4;5;7;8], [0, -5;0, 2;0, -2;0, 8;0, 7], '6');
sparse_join_invs(15, [1;3;5],[-1;-7;12], 20, [2; 3; 4], [1; 2; -4], 20, [1;2;3;4;5], [-1, 0;0, 1;-7, 2;0, -4;12, 0], '7');
fprintf('sparse 10 x 1 and sparse 8 x 2 vectors:\n');
sparse_join_invs(10, [1; 3; 4; 6; 7], [-2; -3; -4; -5; -6], 8, [1; 2; 3; 4; 7; 8], [-11,-21; -12,-22; -13,-23; -14,-24;-15,-25; -16,-26], 10, [1; 2; 3; 4; 6; 7; 8], [-2, -11,-21; 0, -12,-22; -3, -13,-23; -4, -14,-24; -5, 0, 0; -6, -15,-25; 0, -16,-26], '8');
fprintf(' sparse 10 x 1 and sparse 8 x 2 vectors, with a negative index (-1) in the first sparse sequence:\n');
sparse_join_invs(10, [-1; 3; 4; 6; 7], [-2; -3; -4; -5; -6], 8, [1; 2; 3; 4; 7; 8], [-11,-21; -12,-22; -13,-23; -14,-24;-15,-25; -16,-26], 10, [-1; 1; 2; 3; 4; 6; 7; 8], [-2, 0, 0; 0, -11,-21; 0, -12,-22; -3, -13,-23; -4, -14,-24; -5, 0, 0; -6, -15,-25; 0, -16,-26], '8B');
fprintf('sparse 8 x 2 and sparse 10 x 1 vectors:\n');
sparse_join_invs(8, [1; 2; 3; 4; 7; 8], [-11,-21; -12,-22; -13,-23; -14,-24;-15,-25; -16,-26], 10, [ 1; 3; 4; 6; 7], [-2; -3; -4; -5; -6], 10, [1; 2; 3; 4; 6; 7; 8], [-11,-21, -2; -12,-22, 0; -13,-23, -3; -14,-24, -4;  0,0, -5; -15,-25, -6; -16,-26, 0], '8C');
sparse_join_invs(9, [ 1; 4; 5; 7], [ -5; -3; -2; -1], 9, [ 4; 7; 8], [ -5; -3; -2], 9, [1;4;5;7;8], [-5, 0; -3, -5; -2, 0; -1, -3; 0, -2], '9');

function sparse_join_invs(n1, i1, v1, n2, i2, v2, nok, iok, wok, nb)
[n, i, w] = sparse_join(n1, i1, v1, n2, i2, v2); n, i', v1', v2', w'
if abs(n-nok) + norm(i - iok,'inf') + norm(w - wok,'inf') > 0 , fprintf('Msg(sparse_join_exe): %s. FAILED\n',nb); else fprintf('Msg(sparse_join_exe): %s. PASSED\n',nb); end
